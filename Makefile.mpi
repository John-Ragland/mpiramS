PROG = mpiram
# Makefile for mpi parallelized version of mpipe.  
# Execute using "make -f Makefile.mpi"

OBJDIR = obj
MODDIR = mod
SRCDIR = src

# The Intel and Sun compilers (both free) make an executable that runs
# substantially faster than the GNU fortan compiler.  The Sun compiler
# is recommended.

###########################################
# Gnu g77/gfortran options (64 bit)
FC = mpif90
#FFLAGS =  -cpp -march=corei7 -mfpmath=sse -Wall -finline-functions -ffast-math -fno-strength-reduce -fomit-frame-pointer -falign-functions=2  -O3 -fintrinsic-modules-path $(MODDIR)
#FFLAGS = -cpp -mtune=corei7-avx -march=corei7-avx -Wall -ffast-math -O3 -fuse-linker-plugin -fintrinsic-modules-path $(MODDIR)
#FFLAGS = -cpp -mtune=corei7-avx -march=corei7-avx -Wall -ffast-math -O3 -flto -fintrinsic-modules-path $(MODDIR)

#FFLAGS =  -cpp -mtune=native -march=native -ffast-math -Wall -O3 -fintrinsic-modules-path $(MODDIR)
#LDFLAGS = -mtune=corei7-avx -march=corei7-avx -flto

FFLAGS = -cpp -Ofast -march=corei7-avx -Wall -ffast-math -fuse-linker-plugin -fintrinsic-modules-path $(MODDIR)
LDFLAGS = -march=corei7-avx -Ofast -flto

###########################################
# Intel compiler, ifort, options (64 bit)
#FC= mpif90
#FFLAGS = -fast 
#LDFLAGS = -liomp5 -lpthread 
#LDFLAGS = -Bstatic -static 
#lapack/*.o

###########################################
# Sun Studio compiler f95 options 64 bit; 
# Sun performance library requires -dalign which is
# included already in -fast
# FC = mpif90
# FFLAGS =  -fast -w4 -xipo=2 -xprefetch=yes -xprefetch_level=3 -M $(MODDIR)
# LDFLAGS = -fast -xipo=2 -xprefetch=yes -xprefetch_level=3 -lgcc_s 

###########################################
# G95 compiler flags
#FC = g95
#FFLAGS =  -O3 -ffast-math -msse3 -I mod -Wall -march=athlon64 -fomit-frame-pointer -ftree-vectorize -fno-strength-reduce
#LDFLAGS = 

OBJ    = 			\
	$(OBJDIR)/kinds.o	\
	$(OBJDIR)/envdata.o	\
	$(OBJDIR)/param.o	\
	$(OBJDIR)/mattri.o	\
	$(OBJDIR)/interpolators.o	\
	$(OBJDIR)/profiles.o	\
	$(OBJDIR)/fld.o	\
	$(OBJDIR)/epade.o	\
	$(OBJDIR)/matrc.o	\
	$(OBJDIR)/peramx_mpi.o	\
	$(OBJDIR)/ram.o	\
	$(OBJDIR)/solvetri.o	\
	$(OBJDIR)/splnlib.o	

MOD    = 			\
	$(MODDIR)/kinds.mod	\
	$(MODDIR)/envdata.mod	\
	$(MODDIR)/param.mod	\
	$(MODDIR)/mattri.mod	\
	$(MODDIR)/interpolators.mod	\
	$(MODDIR)/profiles.mod	\
	$(MODDIR)/fld.mod	


$(PROG) : $(MOD) $(OBJ) 
	$(FC) -o $(PROG) $(OBJ) $(LDFLAGS)
	strip $(PROG)

clean: 
	rm -f obj/peramx.o
	rm -f $(OBJ) $(MOD) 

# First compile the modules - these are needed when code using them are compiled.
$(MODDIR)/kinds.mod : $(SRCDIR)/kinds.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/kinds.f90
	mv -f kinds.mod $(MODDIR)/
	mv -f kinds.o $(OBJDIR)/

$(MODDIR)/envdata.mod : $(SRCDIR)/envdata.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/envdata.f90
	mv -f envdata.mod $(MODDIR)/
	mv -f envdata.o $(OBJDIR)/

$(MODDIR)/param.mod : $(SRCDIR)/param.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/param.f90
	mv -f param.mod $(MODDIR)/
	mv -f param.o $(OBJDIR)/

$(MODDIR)/mattri.mod : $(SRCDIR)/mattri.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/mattri.f90
	mv -f mattri.mod $(MODDIR)/
	mv -f mattri.o $(OBJDIR)/

$(MODDIR)/interpolators.mod : $(SRCDIR)/interpolators.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/interpolators.f90
	mv -f interpolators.mod $(MODDIR)/
	mv -f interpolators.o $(OBJDIR)/

$(MODDIR)/profiles.mod : $(SRCDIR)/profiles.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/profiles.f90
	mv -f profiles.mod $(MODDIR)/
	mv -f profiles.o $(OBJDIR)/

$(MODDIR)/fld.mod : $(SRCDIR)/fld.f90
	$(FC) -c $(FFLAGS)  $(SRCDIR)/fld.f90
	mv -f fld.mod $(MODDIR)/
	mv -f fld.o $(OBJDIR)/

# Object files (nothing to be done for the modules.)
$(OBJDIR)/kinds.o : $(SRCDIR)/kinds.f90 $(MOD)

$(OBJDIR)/envdata.o : $(SRCDIR)/envdata.f90 $(MOD)

$(OBJDIR)/param.o : $(SRCDIR)/param.f90 $(MOD)

$(OBJDIR)/mattri.o : $(SRCDIR)/mattri.f90 $(MOD)

$(OBJDIR)/interpolators.o : $(SRCDIR)/interpolators.f90  $(MOD)

$(OBJDIR)/profiles.o : $(SRCDIR)/profiles.f90 $(MOD)

$(OBJDIR)/fld.o : $(SRCDIR)/fld.f90 $(MOD)

$(OBJDIR)/epade.o : $(SRCDIR)/epade.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/epade.f90
	mv -f epade.o $(OBJDIR)/

$(OBJDIR)/matrc.o : $(SRCDIR)/matrc.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/matrc.f90
	mv -f matrc.o $(OBJDIR)/

# N.B. This is the MPI version of this main routine.
$(OBJDIR)/peramx_mpi.o : $(SRCDIR)/peramx_mpi.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/peramx_mpi.f90
	mv -f peramx_mpi.o $(OBJDIR)/

$(OBJDIR)/ram.o : $(SRCDIR)/ram.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/ram.f90
	mv -f ram.o $(OBJDIR)/

$(OBJDIR)/solvetri.o : $(SRCDIR)/solvetri.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/solvetri.f90
	mv -f solvetri.o $(OBJDIR)/

$(OBJDIR)/splnlib.o : $(SRCDIR)/splnlib.f90 $(MOD)
	$(FC) -c $(FFLAGS)  $(SRCDIR)/splnlib.f90
	mv -f splnlib.o $(OBJDIR)/

